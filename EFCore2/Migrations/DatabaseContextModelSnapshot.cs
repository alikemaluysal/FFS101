// <auto-generated />
using System;
using EFCore2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCore2.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCore2.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CratedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CratedDate = new DateTime(2023, 12, 29, 21, 58, 3, 604, DateTimeKind.Local).AddTicks(525),
                            Name = "Bilgisayar"
                        },
                        new
                        {
                            Id = 2,
                            CratedDate = new DateTime(2023, 12, 29, 21, 58, 3, 604, DateTimeKind.Local).AddTicks(538),
                            Name = "Telefon"
                        },
                        new
                        {
                            Id = 3,
                            CratedDate = new DateTime(2023, 12, 29, 21, 58, 3, 604, DateTimeKind.Local).AddTicks(539),
                            Name = "Tablet"
                        });
                });

            modelBuilder.Entity("EFCore2.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CratedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CratedDate = new DateTime(2023, 12, 29, 21, 58, 3, 604, DateTimeKind.Local).AddTicks(542),
                            Name = "Asus Bilgisayar",
                            Price = 15000.0,
                            Stock = 30
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CratedDate = new DateTime(2023, 12, 29, 21, 58, 3, 604, DateTimeKind.Local).AddTicks(545),
                            Name = "Dell Bilgisayar",
                            Price = 19000.0,
                            Stock = 40
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            CratedDate = new DateTime(2023, 12, 29, 21, 58, 3, 604, DateTimeKind.Local).AddTicks(546),
                            Name = "Iphone 15",
                            Price = 17000.0,
                            Stock = 50
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CratedDate = new DateTime(2023, 12, 29, 21, 58, 3, 604, DateTimeKind.Local).AddTicks(547),
                            Name = "Galaxy S20",
                            Price = 23000.0,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("EFCore2.Entities.Product", b =>
                {
                    b.HasOne("EFCore2.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
